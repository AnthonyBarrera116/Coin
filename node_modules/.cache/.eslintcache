[{"C:\\Users\\ajbar\\Coin\\src\\index.js":"1","C:\\Users\\ajbar\\Coin\\src\\App.js":"2","C:\\Users\\ajbar\\Coin\\src\\reportWebVitals.js":"3"},{"size":550,"mtime":1681223976727,"results":"4","hashOfConfig":"5"},{"size":6754,"mtime":1681225429721,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1681223976728,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ttwov4",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ajbar\\Coin\\src\\index.js",[],[],"C:\\Users\\ajbar\\Coin\\src\\App.js",["18"],[],"// Imports\r\nimport './App.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport abi from \"./utils/Faucet.json\";\r\n\r\n\r\n// App\r\nfunction App() {\r\n\r\n  // const holders for faucet page\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [signer, setSigner] = useState();\r\n  const [fcContract, setFcContract] = useState();\r\n  const [withdrawError, setWithdrawError] = useState(\"\");\r\n  const [withdrawSuccess, setWithdrawSuccess] = useState(\"\");\r\n  const [transactionData, setTransactionData] = useState(\"\");\r\n  const contractABI = abi.abi;\r\n\r\n  // Checks wallet and gets current wallet\r\n  useEffect(() => {\r\n    getCurrentWalletConnected();\r\n    addWalletListener();\r\n  }, [walletAddress]);\r\n\r\n\r\n  // connects wallet\r\n  const connectWallet = async () => {\r\n\r\n\r\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\r\n      try {\r\n\r\n        // gets provider\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        \r\n        // gets Accounts\r\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\r\n        \r\n        // gets Signer\r\n        setSigner(provider.getSigner());\r\n\r\n        // connects to contract address facuet\r\n        setFcContract( new ethers.Contract(\"0xc83CB6FefdAD857d1748D673C7495B01a5987fD9\",contractABI,provider));\r\n        \r\n        // Set active wallet\r\n        setWalletAddress(accounts[0]);\r\n\r\n      } \r\n      \r\n      catch (err) {\r\n\r\n        console.error(err.message);\r\n\r\n      }\r\n\r\n    } \r\n    \r\n    else {\r\n\r\n      // Metamask not insatlled\r\n      console.log(\"Please install MetaMask\");\r\n\r\n    }\r\n\r\n  };\r\n\r\n  // Gets current wallet\r\n  const getCurrentWalletConnected = async () => {\r\n\r\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\r\n\r\n      try {\r\n\r\n        // gets provider in window ethrum\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n        // gets Account\r\n        const accounts = await provider.send(\"eth_accounts\", []);\r\n\r\n        if (accounts.length > 0) {\r\n\r\n          // gets Signer\r\n          setSigner(provider.getSigner());\r\n\r\n          // connects to contract address facuet\r\n          setFcContract(new ethers.Contract(\"0xc83CB6FefdAD857d1748D673C7495B01a5987fD9\",contractABI,provider));\r\n\r\n          // Set active wallet\r\n          setWalletAddress(accounts[0]);\r\n        } \r\n        \r\n        else {\r\n\r\n          // Connnect Metamask\r\n          console.log(\"Connect to MetaMask using the Connect Wallet button\");\r\n\r\n        }\r\n\r\n      } \r\n      \r\n      catch (err) {\r\n\r\n        console.error(err.message);\r\n\r\n      }\r\n\r\n    } \r\n    \r\n    else {\r\n\r\n      // Metamask not installed\r\n      console.log(\"Please install MetaMask\");\r\n\r\n    }\r\n  };\r\n\r\n  // Wallet listner\r\n  const addWalletListener = async () => {\r\n\r\n    // Window ethrum\r\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\r\n      \r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n\r\n        setWalletAddress(accounts[0]);\r\n\r\n      });\r\n\r\n    } \r\n\r\n    else {\r\n\r\n      // Metamask not installed\r\n\r\n      setWalletAddress(\"\");\r\n\r\n      console.log(\"Please install MetaMask\");\r\n\r\n    }\r\n\r\n  };\r\n\r\n  // Requesting of Token\r\n  const reqTok = async () => {\r\n\r\n    // Error blank and success\r\n    setWithdrawError(\"\");\r\n    setWithdrawSuccess(\"\");\r\n\r\n    try {\r\n\r\n      // connects signer your wallat\r\n      const fcContractWithSigner = fcContract.connect(signer);\r\n\r\n      // Calls faucet contract to request tokens\r\n      const resp = await fcContractWithSigner.requestTokens();\r\n\r\n      // For sucess\r\n      setWithdrawSuccess(\"Operation succeeded - enjoy your tokens!\");\r\n     \r\n      // hash transaction data\r\n      setTransactionData(resp.hash);\r\n    } \r\n    \r\n    catch (err) {\r\n\r\n      // error message to error\r\n      setWithdrawError(err.message);\r\n\r\n    }\r\n\r\n  };\r\n\r\n  // Page\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-brand\">\r\n            <h1 className=\"navbar-item is-size-4\">College Token (CT)</h1>\r\n          </div>\r\n          <div id=\"navbarMenu\" className=\"navbar-menu\">\r\n            <div className=\"navbar-end is-align-items-center\">\r\n              <button\r\n                className=\"button is-white connect-wallet\"\r\n                onClick={connectWallet}\r\n              >\r\n                <span className=\"is-link has-text-weight-bold\">\r\n                  {walletAddress && walletAddress.length > 0\r\n                    ? `Connected: ${walletAddress.substring(\r\n                        0,\r\n                        6\r\n                      )}...${walletAddress.substring(38)}`\r\n                    : \"Connect Wallet\"}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <section className=\"hero is-fullheight\">\r\n        <div className=\"faucet-hero-body\">\r\n          <div className=\"container has-text-centered main-content\">\r\n            <h1 className=\"title is-1\">Faucet</h1>\r\n            <p>Fast and reliable. 50 CT/day.</p>\r\n            <div className=\"mt-5\">\r\n              {withdrawError && (\r\n                <div className=\"withdraw-error\">{withdrawError}</div>\r\n              )}\r\n              {withdrawSuccess && (\r\n                <div className=\"withdraw-success\">{withdrawSuccess}</div>\r\n              )}{\" \"}\r\n            </div>\r\n            <div className=\"box address-box\">\r\n              <div className=\"columns\">\r\n                <div className=\"column is-four-fifths\">\r\n                  <input\r\n                    className=\"input is-medium\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your wallet address (0x...)\"\r\n                    defaultValue={walletAddress}\r\n                  />\r\n                </div>\r\n                <div className=\"column\">\r\n                  <button\r\n                    className=\"button is-link is-medium\"\r\n                    onClick={reqTok}\r\n                    disabled={walletAddress ? false : true}\r\n                  >\r\n                    GET TOKENS\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <article className=\"panel is-grey-darker\">\r\n                <p className=\"panel-heading\">Transaction Data</p>\r\n                <div className=\"panel-block\">\r\n                  <p>\r\n                    {transactionData\r\n                      ? `Transaction hash: ${transactionData}`\r\n                      : \"--\"}\r\n                  </p>\r\n                </div>\r\n              </article>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\ajbar\\Coin\\src\\reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":24,"column":6,"nodeType":"21","endLine":24,"endColumn":21,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentWalletConnected'. Either include it or remove the dependency array.","ArrayExpression",["23"],{"desc":"24","fix":"25"},"Update the dependencies array to be: [getCurrentWalletConnected, walletAddress]",{"range":"26","text":"27"},[730,745],"[getCurrentWalletConnected, walletAddress]"]